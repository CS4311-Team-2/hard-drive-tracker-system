# Generated by Django 4.0.2 on 2022-02-27 21:46

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import unixtimestampfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Listings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('condition', models.CharField(choices=[('Used', 'Used'), ('New', 'New')], default='Used', max_length=50)),
                ('product_type', models.CharField(choices=[('Bike', 'Bike'), ('Parts', 'Parts'), ('Models', 'Models'), ('Other', 'Other')], default='Bike', max_length=50)),
                ('sale_type', models.CharField(choices=[('Available for pickup', 'Pick Up'), ('Available for shipping', 'Ship')], default='Available for shipping', max_length=50)),
                ('price', models.FloatField()),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=25)),
                ('state', models.CharField(max_length=25)),
                ('zipcode', models.CharField(max_length=25)),
                ('list_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('contact_email', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Listings',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_reference_no', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('request_reference_no_year', unixtimestampfield.fields.UnixTimeStampField(auto_now_add=True, default=0.0)),
                ('request_status', models.CharField(choices=[('created', 'Created'), ('forecasted', 'Forecasted'), ('confirmed', 'Confirmed'), ('approved', 'Approved'), ('declined', 'Declined'), ('delivered', 'Delivered'), ('fullfilled', 'Fullfilled'), ('partial-returned', 'Partial Returned'), ('closed', 'Closed'), ('cancelled', 'Canceled'), ('archived', 'Archived'), ('overdue', 'Overdue')], default='created', max_length=50)),
                ('request_creation_date', unixtimestampfield.fields.UnixTimeStampField(auto_now_add=True, default=0.0)),
                ('request_last_modifed_date', unixtimestampfield.fields.UnixTimeStampField(auto_now=True, default=0.0)),
                ('need_drive_by_date', models.CharField(max_length=50)),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Request',
            },
        ),
        migrations.CreateModel(
            name='HardDriveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.CharField(choices=[('classified', 'Classified'), ('unclassified', 'Unclassified')], default='unclassified', max_length=50)),
                ('amount_required', models.IntegerField(default=1)),
                ('connection_port', models.CharField(default='SATA', max_length=50)),
                ('hard_drive_size', models.CharField(blank=True, max_length=50)),
                ('hard_drive_type', models.CharField(blank=True, max_length=50)),
                ('comment', models.TextField(blank=True)),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hard_drive_requests', to='main.request')),
            ],
            options={
                'verbose_name_plural': 'Hard Drive Request',
            },
        ),
        migrations.CreateModel(
            name='HardDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', unixtimestampfield.fields.UnixTimeStampField(auto_now_add=True)),
                ('serial_number', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('hard_drive_type', models.CharField(max_length=100)),
                ('connection_port', models.CharField(max_length=100)),
                ('hard_drive_size', models.CharField(max_length=100)),
                ('classification', models.CharField(choices=[('classified', 'Classified'), ('unclassified', 'Unclassified')], default='unclassified', max_length=50)),
                ('justification_for_classification_change', models.TextField(blank=True)),
                ('image_version_id', models.CharField(max_length=100)),
                ('boot_test_status', models.CharField(choices=[('pass', 'Pass'), ('failed', 'Failed')], default='pass', max_length=50)),
                ('boot_test_expiration', unixtimestampfield.fields.UnixTimeStampField(default=0.0)),
                ('status', models.CharField(max_length=100)),
                ('justification_for_hard_drive_status_change', models.TextField(blank=True)),
                ('issue_date', unixtimestampfield.fields.UnixTimeStampField(default=0.0)),
                ('expected_hard_drive_return_date', unixtimestampfield.fields.UnixTimeStampField(default=0.0)),
                ('justification_for_hard_drive_return_date_status_change', models.TextField(blank=True)),
                ('actual_return_date', unixtimestampfield.fields.UnixTimeStampField(default=0.0)),
                ('modified_date', unixtimestampfield.fields.UnixTimeStampField(auto_now=True, auto_now_add=True)),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hard_drives', to='main.request')),
            ],
            options={
                'verbose_name_plural': 'Hard Drive',
            },
        ),
    ]
